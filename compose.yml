---
services:
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - type: bind
        source: /mnt/media/tv
        target: /tv
      - type: bind
        source: /mnt/media/downloads
        target: /downloads
      - ./dockerConfigs/sonarr:/config
    ports:
      - 8989:8989
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - type: bind
        source: /mnt/media/movies
        target: /movies
      - type: bind
        source: /mnt/media/downloads
        target: /downloads
      - ./dockerConfigs/radarr:/config
    ports:
      - 7878:7878
    restart: unless-stopped

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - type: bind
        source: /mnt/media/music
        target: /music
      - type: bind
        source: /mnt/media/downloads
        target: /downloads
      - ./dockerConfigs/lidarr:/config
    ports:
      - 8686:8686
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - ./dockerConfigs/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Europe/London
    ports:
      - 8191:8191
    restart: unless-stopped

  homer:
    image: b4bz/homer:v24.05.1
    container_name: homer
    volumes:
      - ./dockerConfigs/homer/config.yml:/www/assets/config.yml #Config file
      - ./dockerConfigs/homer/custom.css:/www/assets/custom.css #Custom CSS
      - ./dockerConfigs/homer/dracula-background.png:/www/assets/dracula-background.png #Dracula Background
      - ./submodules/dashboard-icons/png:/www/assets/png #Icons
    ports:
      - 8888:8080
    user: 1000:1000 # default
    environment:
      - INIT_ASSETS=1 # default, requires the config directory to be writable for the container user (see user option)
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    restart: unless-stopped

  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    volumes:
      - ./dockerConfigs/gluetun:/gluetun
    ports:
      - 8080:8080    # qBittorrent WebUI (mapped from internal 8080 to external 10095)
      - 6881:6881    # qBittorrent TCP
      - 6881:6881/udp # qBittorrent UDP
    environment:
       - VPN_SERVICE_PROVIDER=private internet access
       - OPENVPN_USER=${OPENVPN_USER}
       - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
       - SERVER_REGIONS=UK London, UK Manchester   # Changed from Netherlands to UK London
       - PUID=1000
       - PGID=1000
       - TZ=Europe/London

  qbitorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: "service:gluetun"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - WEBUI_PORT=8080
    volumes:
      - ./dockerConfigs/qbitorrent:/config
      - type: bind
        source: /mnt/media/downloads
        target: /downloads
    restart: unless-stopped

  loki:
    image: grafana/loki:latest
    container_name: nix-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus
    container_name: nix-prometheus
    volumes:
      - ./dockerConfigs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./dockerConfigs/prometheus:/etc/prometheus/:rw
    ports:
      - 9090:9090
    restart: unless-stopped
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    container_name: nix-node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - --path.rootfs=/host 
      - --path.procfs=/host/proc 
      - --path.sysfs=/host/sys 
      - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker)($|/)
    ports:
      - 9100:9100
    restart: unless-stopped
    networks:
      - monitoring

  #alert-manager:
    #image: prom/alertmanager
    #volumes:
      #- "./alertmanager.yml:/alertmanager/alertmanager.yml"
    #ports:
      #- 9093:9093

  cadvisor:
    container_name: nix-cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - "8181:8080"
    volumes: 
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /dev/disk/:/dev/disk:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    privileged: true
    user: root
    restart: unless-stopped
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:latest
    container_name: nix-promtail
    volumes:
      - /var/log:/var/log
      - ./dockerConfigs/promtail/promtail-config.yml:/etc/promtail/config.yml:rw
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: nix-grafana
    volumes: 
      - ./dockerConfigs/grafana:/var/lib/grafana/:rw
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    ports:
      - "3000:3000"
    user: "1000:100" 
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge


